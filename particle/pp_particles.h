      INTEGER NPART_MAX, NPART_2D_MAX, NDIAM_CLASSES

#ifdef _PP_SCHMEECKLE_BOUND_
      INTEGER NCONTACTS_MAX
#endif

      REAL TIMESCALES_REINIT
!        NDIAM_CLASSES IST ANZAHL DER PARTIKELFRAKTIONEN (ANZAHL DER DURCHMESSERFRAKTIONEN - DICHTE SIT IMMER GLEICH)
!        TIMESCALES_REINIT IST GRENZE FÜR TIME_REST, NACH WELCHER PARTIKEL REINITIALISIERT WIRD (S.U.)


!     NPART_MAX IMMER SO GROÃŸ WÃ„HLEN, DASS AUCH BEIM AUSTAUSCH VON PARTIKELN NOCH GENÃœGEND PLATZ
!     ÃœBRIGBLEIBT, D.H. IN JEDEM GITTER DÃœRFEN NIE MEHR ALS
!     	    	  VOUMENTANTEIL_DES_GITTERS   *    NPART_MAX
!     PARTIKEL SEIN
!
!     
!
!
!     BEISPIELE FÃœR benchmarkmixer:
!     NXNPART=75:    NPART_MAX = 32.0E6,  NPART_MAX = 32.0E6,   NPART_2D_MAX=400000
!     NXNPART=72:    NPART_MAX = 24.0E6,  NPART_MAX = 24.0E6,   NPART_2D_MAX=330000
!     NXNPART=60:    NPART_MAX = 16.0E6,  NPART_MAX = 16.0E6,   NPART_2D_MAX=200000
!     NXNPART=50:    NPART_MAX = 7.2E6,   NPART_MAX = 7.2E6,    NPART_2D_MAX=110000
!
!     EMSCHER: NPART_MAX = 1.0E3, 
!           NPART_2D_MAX=200000
!           FÜR TEILKREIS: NPART_2D_MAX=0.016/0.477 * NPART_MAX   +  ZUSCHLAG
!	NPART_MAX <= 33554432



!        NPART_MAX : MAXIMUM NUMBER OF PARTICLES PER PROCESSOR
      PARAMETER ( NPART_MAX = 1000000 )

!        NPART_2D_MAX : MAXIMUM NUMBER OF PARTICLES IN A 2D LAYER PER PROCESSOR
!        USED FOR SEDIMENTED PARTICLES (..._REST) AND FOR PARTICLE EXCHANGE BTW. GRIDS / PROCESSORS
      PARAMETER ( NPART_2D_MAX=100000 )
      
!        NDIAM_CLASSES : NUMBER OF PARTICLE FRACTIONS ( PARTICLE DIAMETERS )
      PARAMETER ( NDIAM_CLASSES=3 )

#ifdef _PP_SCHMEECKLE_BOUND_
!     NCONTACTS_MAX: MAXIMUM NUMBER OF CONTACTING PARTICLES ONE PARTICLE CAN HAVE
      PARAMETER ( NCONTACTS_MAX = 32 )
#endif

      
!        TIMESCALES_REINIT : ifdef _PP_REINIT_ THEN PARTICLES WHICH ARE ON THE FLOOR FOR
!        MORE THAN      TIMESCALES_REINIT * INNER TIME SCALE      ARE SUPPOSED TO BE SEDIMENTED
!        AND REINITIALIZED INTO THE FLOW (I.E. REMOVED AND A NEW PARTICLE IS BORN)
      PARAMETER ( TIMESCALES_REINIT=10.0 )





      COMMON /PP_PARTICLES/                                             &
     &    PP_NXNPART, PP_LREAD, PP_LWRITE, PP_LREC, PP_ITREC, PP_STAT,  &
     &    PP_FLOWCASE, PP_INIT_XMIN, PP_INIT_XMAX,  PP_INIT_YMIN,       &
     &    PP_INIT_YMAX, PP_INIT_ZMIN, PP_INIT_ZMAX, RHOPART,            &
     &    DIAMPART_MIN, DIAMPART_MAX, GRAVITATION,SLOPE, SLOPEX,        &
     &    SLOPEY,SLOPEZ, DISPERS_FOR_INIT, CUTOFF_WAVENUMBER,           &
     &    DELTA_REBOUNCE, STAT_FRIC_COEF, DYN_FRIC_COEF, ROUGHNESS_RMS, &
     &    PP_SHIFT_X, PP_SHIFT_Y, PP_SHIFT_Z, PP_BED_LIMIT,             &
     &    PP_BEDLENGTHFACX,PP_BEDLENGTHFACY, PP_BEDMINX, PP_BEDMAXX,    &
     &    PP_BEDMINY, PP_BEDMAXY, NPART, NPART_PER_GRID_MAX,            &
     &    NPART_2D_PER_GRID_MAX,RAND_WALK_MAX, GRID_OFFSET,             &
     &    GRID_OFFSET2D, NPART_GRID, PART_IDX, XPART, START_VEC,        &
     &    DIAMCLASS, DS, UPART, OLD_UPART_F, FORCEPART, NSUSPART_DS,    &
     &    MEAN_SUSPART_DS, NBR_IN_REST, IDX_REST, NBR_REST, DIR_REST,   &
     &    NPART_REST, TIME_REST
   
#ifdef _PP_SCHMEECKLE_BOUND_
      COMMON /PP_PARTICLES/                                             &
     &    IDX_BED, NPART_BED, NCONTACTS, IDX_CONTACTPART
#endif

#ifdef  _PP_FILTER_APRIORI_
      COMMON /PP_PARTICLES/ UPART_F_FILTERED
#endif

#ifdef _PP_VEL_FILTER_POS_UNFILTER_
      COMMON /PP_PARTICLES/ UPART_UNFIL, OLD_UPART_F_UNFIL
#endif

#ifdef  _PP_WRITE_UPART_EFF_
      COMMON /PP_PARTICLES/ UPART_EFF
#endif

#if defined _PP_SHOT_SGS_ || defined _PP_SIM_SGS_
      COMMON /PP_PARTICLES/ UPART_F_EFF
#endif

#ifdef _IB_
      COMMON /PP_PARTICLES/                                             &
     &    PP_BODY_NVEC, PP_BODY_NVECNO, PP_BODY_NCELLS_MAX
#endif

#ifdef _PP_INIT_FROM_BED_
      COMMON /PP_PARTICLES/ PP_BEDSUM
#endif


!     SAVE STATEMENT NOETIG DA PP_PARTICLES.H NICHT IN MLET UM EVTL. KONFLIKTE MIT ANDEREN VARIABLEN ZU VERMEIDEN
      SAVE /PP_PARTICLES/  





!     PARAMETERS FROM THE INPUT (.DAT) FILE
      INTEGER PP_NXNPART
      LOGICAL PP_LREAD, PP_LWRITE, PP_LREC
      INTEGER PP_ITREC
      LOGICAL PP_STAT
      INTEGER PP_FLOWCASE
      REAL PP_INIT_XMIN, PP_INIT_XMAX 
      REAL PP_INIT_YMIN, PP_INIT_YMAX 
      REAL PP_INIT_ZMIN, PP_INIT_ZMAX
      REAL RHOPART
      REAL DIAMPART_MIN, DIAMPART_MAX
      REAL GRAVITATION,SLOPE,SLOPEX,SLOPEY,SLOPEZ
      REAL DISPERS_FOR_INIT
      REAL CUTOFF_WAVENUMBER
      REAL DELTA_REBOUNCE
      REAL STAT_FRIC_COEF, DYN_FRIC_COEF, ROUGHNESS_RMS
!     PP_SHIFT IST DER VEKTOR MIT DEM EIN PARTIKEL BEI EINER CONNECT-RB VERSCHOBEN WIRD
!     UNGLEICH 0 FALLS ZWEI GITTER CONNECTED WERDEN, DIE NICHT NEBENEINANDER LIEGEN
      REAL PP_SHIFT_X(MAXBOCONDS,9,MAXGRIDS)
      REAL PP_SHIFT_Y(MAXBOCONDS,9,MAXGRIDS)
      REAL PP_SHIFT_Z(MAXBOCONDS,9,MAXGRIDS)
!     BEI _PP_WRITE_BED_ONLY_:      
!     SOBALD PP_BED_LIMIT PARTIKEL IM BED SIND, WIRD DIE SIMULATION DURCH FORT.57 = 0 GESTOPPT
!     BEI _PP_INIT_FROM_BED_:
!     PP_BED_LIMIT IST ANZAHL DER ZUR VERFUEGUNG STEHENDEN BETTE 
!         (MUESSEN IN FORT.1201 - FORT.1201-1+PP_BED_LIMIT SEIN)
!     PP_BED_LIMIT WIRD NUR FUER _PP_WRITE_BED_ONLY_ UND _PP_INIT_FROM_BED_ BENUTZT, 
!         ABER IMMER DEFINIERT (KEIN IFDEF) DA IN STRLES 
!     PP_PARTICLES.H INCLUDED WIRD ABER KEIN PPACK.DEF ZUR VERFUEGUNG STEHT
      INTEGER PP_BED_LIMIT
!     BEI _PP_INIT_FROM_BED_ SIND PP_BEDLENGTHFACX,PP_BEDLENGTHFACY DIE DIMENSIONEN
!     DER ZU LADENDEN BETTE
!     UND PP_BEDMINX/Y,PP_BEDMAXX/Y BEGRENZT DEN BEREICH, IN DEM BETTEN GELADEN WERDEN
      REAL PP_BEDLENGTHFACX,PP_BEDLENGTHFACY
      REAL PP_BEDMINX,PP_BEDMAXX
      REAL PP_BEDMINY,PP_BEDMAXY

      
!     PARAMETERS DERIVED IN PP_INIT / PP_READ / PP_DIM_ARRAYS
      INTEGER NPART, NPART_PER_GRID_MAX,NPART_2D_PER_GRID_MAX
      REAL RAND_WALK_MAX
      INTEGER GRID_OFFSET(MAXGRIDS), GRID_OFFSET2D(MAXGRIDS),           &
     &    NPART_GRID(MAXGRIDS)



!     THE PARTICLES 
      INTEGER PART_IDX( NPART_MAX )
      REAL XPART (3,NPART_MAX)
      REAL   START_VEC ( 3,NPART_MAX )
      INTEGER DIAMCLASS(NPART_MAX)
      REAL DS(NPART_MAX)
      REAL UPART(3,NPART_MAX), OLD_UPART_F(3,NPART_MAX),                &
     &   FORCEPART(3,NPART_MAX)
!     FORCEPART SIND AUF DAS PARTIKEL WIRKENDE KRÃ„FTE
      

!     STATISTICS ON THE DISTANCE A PRTICLE TRAVELS BEFORE SEDIMENTATION      
      INTEGER NSUSPART_DS(NDIAM_CLASSES)
      REAL MEAN_SUSPART_DS(NDIAM_CLASSES)


!     RESTING PARTICLES (ON THE GROUND)
!     IDX_REST IST INDEX IN LISTE, ALSO GLEICH PART_IDX
!     NBR_REST IST ZUGEHOERIGE POSITION IN LISTE, D.H. PART_IDX(NBR_REST(I)) = IDX_REST(I)
!     DIR_REST IST RICHTUNG (WIE IN FLOWTYP: 1=FRONT, 2=BACK, 3=RIGHT, 4=LEFT, 5=BOTTOM, 6=TOP, 7=FRED BODY)
      INTEGER NBR_IN_REST(NPART_MAX)
      INTEGER IDX_REST(NPART_2D_MAX), NBR_REST(NPART_2D_MAX),           &
     &   DIR_REST(NPART_2D_MAX), NPART_REST(MAXGRIDS)
      REAL TIME_REST(NPART_2D_MAX)
!     TIME_REST IST EIN MAß FÜR DIE ZEIT, WELCHE EIN PARTIKEL BEREITS RUHT. DIESES ZEITMAß IST
!     AUF DAS VISKOSE ZEITMAß AN DER WAND (Y*/U_TAU) BEZOGEN:
!        TIME_REST = SUM T_I(T)    FÜR T > T_0, T_0 IST ZEITPUNKT, ZU WELCHEM DAS PARTIKEL ZUM LIEGEN KOMMT
!     MIT T_I(T) = DT / TIMESCALE(T),        TIMESCALE(T) = Y*(T) / U_TAU(T)


#ifdef _PP_SCHMEECKLE_BOUND_
      INTEGER IDX_BED(NPART_2D_MAX), NPART_BED(MAXGRIDS)
      INTEGER NCONTACTS(NPART_MAX)
      INTEGER IDX_CONTACTPART(NCONTACTS_MAX,NPART_MAX)
!     NCONTACTS IS NUMBER OF PARTICLES THIS PARTICLE IS IN CONTACT WITH
!     =-1 IF PARTICLE IS AT REST
#endif


!     FILTERED FLUID VELOCITY AT PARTICLE POSITION - USED FOR A PRIORI ANALYSIS
#ifdef  _PP_FILTER_APRIORI_
      REAL UPART_F_FILTERED(3,NPART_MAX)
#endif

#ifdef _PP_VEL_FILTER_POS_UNFILTER_
      REAL UPART_UNFIL(3,NPART_MAX)
      REAL OLD_UPART_F_UNFIL(3,NPART_MAX)
#endif


!     EFFECTIVE PARTICLE VELOCITY, USED IN LES WITH PARTICLE MODEL ONLY
!     EFFECTIVE PARTICLE VELOCITY IS THE RESOLVED PLUS MODELED VELOCITY
#ifdef  _PP_WRITE_UPART_EFF_
      REAL UPART_EFF(3,NPART_MAX)
#endif

!     EFFECTIVE FLUID VELOCITY AT PARTICLE POSITION, USED IN LES WITH SHOTORBAN PARTICLE MODEL ONLY
!     EFFECTIVE VELOCITY IS THE RESOLVED PLUS MODELED VELOCITY
#if defined _PP_SHOT_SGS_ || defined _PP_SIM_SGS_
      REAL UPART_F_EFF(3,NPART_MAX)
#endif




!     THE TRIANGLES DESRIBING THE BODY - FOR EACH CELL ONLY THE LAST PLANE
!     THAT IS STORED IN TRANGLES... IS TAKEN
#ifdef _IB_
!      REAL PP_BODY_NVEC
!      INTEGER PP_BODY_NVECNO
!      ALLOCATABLE PP_BODY_NVEC(:,:,:),PP_BODY_NVECNO(:)
      REAL,POINTER :: PP_BODY_NVEC(:,:,:)
      INTEGER,POINTER ::  PP_BODY_NVECNO(:)
!     EIGENTLICH IST PP_BODY_NVECNO EINFACH EIN IDIM3D FELD. UM DAS FELD STATISCH ZU
!     DEKLARIEREN MÜSSTE DANN ABER PP_PARTICLES.H IN MLET AUFGENOMMEN WERDEN.
!     DAS WÄRE NICHT SCHÖN. ALSO DYNAMISCHE ALLOKIERUNG IN PP_DIM_ARRAYS / DEALLOKIERUNG IN PP_TERMINATE
      INTEGER PP_BODY_NCELLS_MAX
#endif


#ifdef _PP_INIT_FROM_BED_
!     THE DEFFERENCE BTW. PARTICLES INITIALIZED AND PARTICLES COMING TO REST IN THAT CELL
!     (POSITIVE IF MORE PARTICLES INITIALIZED THAN COMING TO REST)
      INTEGER, POINTER :: PP_BEDSUM(:)
#endif

