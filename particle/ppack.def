CCCCC        DEFINITIONEN FUER C-PREPROZESSOR

C           KRAEFTE
#define _PP_STOKES_DRAG_
#undef _PP_FL_ACC_FORCE_
#undef _PP_SAFFMAN_FORCE_
#undef _PP_ADDED_MASS_


C           INTERPOLATION DER FLUIDGESCHWINDIGKEIT AUF PARTIKELPOSITION
#define _PP_INTERPOL_CL_CS_
#undef _PP_INTERPOL_SL_CS_
#undef _PP_INTERPOL_4THORDER_


C           LES MODELL
#undef _PP_ADM_
#undef _PP_SHOT_SGS_
#undef _PP_SIM_SGS_
#undef _PP_ICMF07_
#undef _PP_ADM_LANGEVIN_08_APRIORI_



#ifdef _PP_ADM_LANGEVIN_UPART_08_APRIORI_
#undef _PP_ADM_
#endif




C           TRANSPORT MIT GEFILTERTER GESCHWINDIGKEIT (A PRIORI ANALYSE)
#undef _PP_TOPHAT2_WEIGHTED_PARTVEL_
#undef _PP_TOPHAT4_WEIGHTED_PARTVEL_
#undef _PP_TOPHAT_WEIGHTED_PARTVEL_ 6
#undef _PP_SHARP_CUTOFF_PARTVEL_
C        IF A FILTER IS DEFINED, THEN THE VEL FIELD IS STORED ON A COARSE GRID - COARSER BY A FACTOR OF _PP_FILTER_COARSEGRID_
#undef _PP_FILTER_COARSEGRID_ 5
C        COMPUTES FILTERED FLUID VELOCITY SEEN BY PARTICLES FOR OUTPUT - PARTICLE VELOCITY AND POSITION ARE COMPUTED FROM UNFILTERED FIELD
#undef _PP_FILTER_APRIORI_
C        COMPUTES TWO VELOCITIES FOR EACH PARTICLE, ONE FROM FILTERED FIELD AND ONE FROM UNFILTERED FIELD
C        PARTICLE POSITION IS COMPUTED FROM UNFILTERED FIELD
#undef _PP_VEL_FILTER_POS_UNFILTER_



C     WANDBEHANDLUNG
C     _PP_REINIT_: SOBALD EIN PARTIKEL L?NGER ALS EINE VORGEGEBENE ZEIT LIEGENBLEIBT, WIRD ES RANDOM NEU INITATILSIERT
#undef _PP_REINIT_
C     _PP_REBOUNCE_: SOBALD EIN PARTIKEL DEN BODEN BER?HRT WIRD ES AUF VORGEGEBENE H?HE GEHOBEN - dazu auch _PP_REST_ aktivieren (SOMMERFELD kann aus sein)
#undef _PP_REBOUNCE_
#undef _PP_SOMMERFELD_MIRRORING_
C     _PP_REST_: PARTIKEL BLEIBT AUF DEM BODEN LIEGEN
#undef _PP_REST_
C     _PP_SCHMEECKLE_BOUND_ : WANDBEHANDLUNG NACH SCHMEECKLE / NELSON 2003
#undef _PP_SCHMEECKLE_BOUND_
#undef _PP_SCHMEECKLE_COLL_OVERLAP_
C     _PP_WRITE_BED_ONLY_: SIMULATION STOPS WHEN ALL PARTICLES HAVE VELOCITY 0 AND PP_WRITE_BED IS CALLED
C     BED IS WRITTEN TO FORT.1201
#undef _PP_WRITE_BED_ONLY_
C     _PP_INIT_FROM_BED_: BED IS READ FROM FORT.2201 AND PARTICLES ARE INITIALIZED IF SCHMEECKLE
C     BOUNDARY MODEL LIFTS PARTICLE
#undef _PP_INIT_FROM_BED_
C     _PP_INSERT_FROM_BED_: IF BY _PP_INIT_FROM_BED_ A PARTICLE IS INITILIAZED, THEN
C     THIS PARTICLE ONLY ENTERS THE FLOW IF _PP_INSERT_FROM_BED_ DEFINED
C     OTHERWISE, THE PARTICLE INIT IS REGISTERED IN BEDSUM AND THEN THROWN AWAY
C     BEDSUM IS WRITTEN TO FORT.2200+BED NUMBER (I.E. BED FROM FORT.1201 -> FORT.2201, ...)
#undef _PP_INSERT_FROM_BED_
C     _PP_RAND_BED_: ONLY NEEDED IN CONJUNCTION WITH _PP_INIT_FROM_BED_
C        IF DEFINED, THE BED NUMBER (FROM WHICH WE READ) IS PICKED RANDOMLY: INT(RANF*(PP_BED_LIMIT-1)+1)
C        IT MIGHT BE NECESSARY TO LOAD THE BED SEVERAL TIMES FOR ONE GRID
C        (DEPENDS ON PP_BEDLENGTH, PP_BEDMIN, PP_BEDMAX)
C        IN THIS CASE, THE SAME BED IS LOADED FOR THE WHOLE GRID
C        THE BED NUMBER WILL ONLY DIFFER FROM GRID TO GRID AND FROM TIME STEP TO TIME STEP
C     IF NOT DEFINED, THE BED NUMBER IS A FUNCTION OF THE TIME STEP NUMBER: MOD(ITTOT,PP_BED_LIMIT)+1
C        THE BED NUMBER WILL NOT DIFFER FROM GRID TO GRID BUT FROM TIME STEP TO TIME STEP
C     BEDS ARE LOADED FROM FORT.1200+BED NUMBER
#undef _PP_RAND_BED_
#define _WALL_HILTI_

#ifdef _PP_INIT_FROM_BED_
#define _PP_SCHMEECKLE_BOUND_
#endif

#ifdef _PP_SCHMEECKLE_BOUND_
#define _PP_REST_
#endif



C     COLLISIONS
#undef _PP_COLLIDE_







C     PARTICLE DIAMETER
C     EXPONENTIAL DISTRIBUTION BTW. DIAMPART_MIN AND MAX (GIVEN ON STDIN)
#define _PP_EXP_DIAM_
C     DIAMETER DISTRIBUTION FROM FILE diampart.dat
#undef _PP_DIAM_FILE_





#undef _PP_TIME_MEASURE_

C     FOR LES WITH PARTICLE-LES MODEL: WRITE EFFECITVE VELOCITY (I.E. RESOLVED + MODELLED) TO FILE
#undef _PP_WRITE_UPART_EFF_



C  WRITES NUMBER OF DEPOSITED PARTICLES TO FORT.30
#undef _PP_DEPOSITION_RATES_RE180_



C     switches in mg41.def:
C  _COMPUTE_MATERIAL_DERIV_


